{
  "_args": [
    [
      "ndjson@github:hugomrdias/ndjson#feat/readable-stream3",
      "/home/node1/go/src/github.com/fabric-samples/hlf-deployment-prod/gatekeeper/node_modules/ipfs-http-client"
    ]
  ],
  "_from": "hugomrdias/ndjson#feat/readable-stream3",
  "_id": "ndjson@1.5.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/ndjson",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/hugomrdias/ndjson/feat%2Freadable-stream3/package.json",
      "gitUrl": "git://github.com/hugomrdias/ndjson.git#feat/readable-stream3",
      "httpsUrl": "git+https://github.com/hugomrdias/ndjson.git#feat/readable-stream3",
      "shortcut": "github:hugomrdias/ndjson#feat/readable-stream3",
      "ssh": "git@github.com:hugomrdias/ndjson.git#feat/readable-stream3",
      "sshUrl": "git+ssh://git@github.com/hugomrdias/ndjson.git#feat/readable-stream3",
      "type": "github"
    },
    "name": "ndjson",
    "raw": "ndjson@github:hugomrdias/ndjson#feat/readable-stream3",
    "rawSpec": "github:hugomrdias/ndjson#feat/readable-stream3",
    "scope": null,
    "spec": "github:hugomrdias/ndjson#feat/readable-stream3",
    "type": "hosted"
  },
  "_requiredBy": [
    "/ipfs-http-client"
  ],
  "_resolved": "git+https://github.com/hugomrdias/ndjson.git#4db16da6b42e5b39bf300c3a7cde62abb3fa3a11",
  "_shasum": "64a1b451420acdd1bb2b28fd0d1581be02e60444",
  "_shrinkwrap": null,
  "_spec": "ndjson@github:hugomrdias/ndjson#feat/readable-stream3",
  "_where": "/home/node1/go/src/github.com/fabric-samples/hlf-deployment-prod/gatekeeper/node_modules/ipfs-http-client",
  "author": {
    "name": "max ogden"
  },
  "bin": {
    "ndjson": "cli.js"
  },
  "bugs": {
    "url": "https://github.com/maxogden/ndjson/issues"
  },
  "dependencies": {
    "json-stringify-safe": "^5.0.1",
    "minimist": "^1.2.0",
    "split2": "^3.1.0",
    "through2": "^3.0.0"
  },
  "description": "streaming newline delimited json parser + serializer",
  "devDependencies": {
    "concat-stream": "^2.0.0",
    "tape": "^4.6.3"
  },
  "gitHead": "4db16da6b42e5b39bf300c3a7cde62abb3fa3a11",
  "homepage": "https://github.com/maxogden/ndjson",
  "keywords": [
    "ldjson",
    "ndjson"
  ],
  "license": "BSD-3-Clause",
  "main": "index.js",
  "name": "ndjson",
  "optionalDependencies": {},
  "readme": "# ndjson\n\nstreaming [newline delimited json](https://en.wikipedia.org/wiki/Line_Delimited_JSON) parser + serializer. Available as a JS API or a command line tool\n\n[![NPM](https://nodei.co/npm/ndjson.png)](https://nodei.co/npm/ndjson/)\n\n## usage\n\n```\nvar ndjson = require('ndjson')\n```\n\n#### ndjson.parse(opts)\n\nreturns a transform stream that accepts newline delimited json and emits objects\n\nexample newline delimited json:\n\n`data.txt`:\n\n```\n{\"foo\": \"bar\"}\n{\"hello\": \"world\"}\n```\n\nIf you want to discard non-valid JSON messages, you can call `ndjson.parse({strict: false})`\n\nusage:\n\n```js\nfs.createReadStream('data.txt')\n  .pipe(ndjson.parse())\n  .on('data', function(obj) {\n    // obj is a javascript object\n  })\n```\n\n#### ndjson.serialize() / ndjson.stringify()\n\nreturns a transform stream that accepts json objects and emits newline delimited json\n\nexample usage:\n\n```js\nvar serialize = ndjson.serialize()\nserialize.on('data', function(line) {\n  // line is a line of stringified JSON with a newline delimiter at the end\n})\nserialize.write({\"foo\": \"bar\"})\nserialize.end()\n```\n\n### license\n\nBSD-3-Clause\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/maxogden/ndjson.git"
  },
  "scripts": {
    "test": "tape test.js"
  },
  "version": "1.5.0"
}
